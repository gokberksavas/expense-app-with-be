{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'ResidentInput',\n  data: function data() {\n    return {\n      inputValue: ''\n    };\n  },\n  props: {\n    savedResidents: Array\n  },\n  computed: {\n    validateInput: function validateInput() {\n      return !this.$props.savedResidents.includes(this.inputValue) && !!this.inputValue;\n    }\n  },\n  methods: {\n    preventNumericInput: function preventNumericInput($event) {\n      var numericRegex = new RegExp(/[0-9]/);\n      var key = $event.key;\n\n      if (numericRegex.test(key)) {\n        $event.preventDefault();\n      }\n    },\n    addResident: function addResident() {\n      this.$computed.validateInput() && this.$emit('resident-added', this.inputValue);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA;AACAA,uBADA;AAEAC;AACA;AACAC;AADA;AAIA,GAPA;AAQAC;AACAC;AADA,GARA;AAWAC;AACAC,iBADA,2BACA;AACA;AACA;AAHA,GAXA;AAgBAC;AACAC;AACA;AACA;;AAEA;AACAC;AACA;AACA,KARA;AASAC;AACA;AACA;AAXA;AAhBA","names":["name","data","inputValue","props","savedResidents","computed","validateInput","methods","preventNumericInput","$event","addResident"],"sourceRoot":"src/components/resident-section","sources":["ResidentInput.vue"],"sourcesContent":["<template>\r\n    <b-container fluid=\"sm\" class=\"w-50\">\r\n        <b-input-group class=\"shadow-sm\">\r\n            <b-input-group-prepend>\r\n                <b-input-group-text class=\"rounded-0 rounded-start\">Resident Name: </b-input-group-text>\r\n            </b-input-group-prepend>\r\n            <b-form-input \r\n                class=\"rounded-end me-5\"\r\n                placeholder=\"Please type the resident name\" \r\n                v-model.lazy=\"inputValue\" \r\n                @keydown=\"preventNumericInput($event)\"\r\n                :state=\"validateInput\"\r\n            />\r\n            <b-input-group-append class=\"ms-5\">\r\n                <b-button variant=\"success\" @click=\"addResident\">Add</b-button>\r\n            </b-input-group-append>\r\n        </b-input-group>\r\n    </b-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'ResidentInput',\r\n    data: function () {\r\n        return {\r\n            inputValue: '',\r\n\r\n        }\r\n    },\r\n    props: {\r\n        savedResidents: Array\r\n    },\r\n    computed: {\r\n        validateInput() {\r\n            return !this.$props.savedResidents.includes(this.inputValue) && !!this.inputValue;\r\n        }\r\n    },\r\n    methods: {\r\n        preventNumericInput: function ($event) {\r\n            let numericRegex = new RegExp(/[0-9]/);\r\n            let key = $event.key;\r\n\r\n            if (numericRegex.test(key)) {\r\n                $event.preventDefault();\r\n            }\r\n        },\r\n        addResident: function () {\r\n            this.$computed.validateInput() && this.$emit('resident-added', this.inputValue);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n@resident-adde"]},"metadata":{},"sourceType":"module"}